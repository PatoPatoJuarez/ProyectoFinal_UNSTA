{
	"info": {
		"_postman_id": "53130e2b-4ae8-4f22-b1cc-aa34a7948d36",
		"name": "Solicitudes - Hands and Paws",
		"description": "Colección de pruebas de integración sobre el módulo de solicitudes (crear, ver, actualizar, eliminar)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45006613"
	},
	"item": [
		{
			"name": "Login adoptante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Email is in a valid format\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.have.property('usuario');\r",
							"    pm.expect(responseData.usuario).to.have.property('email').that.is.a('string').and.to.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Email format is invalid\");\r",
							"});\r",
							"\r",
							"pm.environment.set(\"token_adoptante\", pm.response.json().token);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"vickilizarraga2210@gmail.com\",\n  \"contrasena\": \"123456\"\n}\n"
				},
				"url": {
					"raw": "http://localhost:3000/api/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login refugio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response contains a valid JWT token\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.token).to.exist.and.to.match(/^[A-Za-z0-9-_.]+.[A-Za-z0-9-_.]+.[A-Za-z0-9-_.]+$/, \"Token should be a valid JWT\");\r",
							"});\r",
							"\r",
							"pm.environment.set(\"token_refugio\", pm.response.json().token);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"refugio22@gmail.com\",\n  \"contrasena\": \"123456\"\n}"
				},
				"url": {
					"raw": "http://localhost:3000/api/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "TC-MP-01-001 - Crear publicación (para usar en solicitudes)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.eql(201);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.all.keys('message', 'publicacion');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Titulo and Descripcion must be non-empty strings\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    \r",
							"    pm.expect(responseData.publicacion.titulo).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Titulo should not be empty\");\r",
							"    pm.expect(responseData.publicacion.descripcion).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Descripcion should not be empty\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token_refugio}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"titulo\": \"Uma\",\n  \"descripcion\": \"Cachorrita amigable\",\n  \"tipoMascota\": \"perro\",\n  \"tamanio\": \"mediano\",   \n  \"genero\": \"hembra\",\n  \"vacunado\": \"si\"        // <-- CAMBIO: De \"true\" (string) a true (booleano)\n}"
				},
				"url": {
					"raw": "http://localhost:3000/api/publicaciones",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"publicaciones"
					]
				}
			},
			"response": []
		},
		{
			"name": "TC-MP-01-002 - Crear solicitud",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.eql(201);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token_adoptante}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"publicacion\": \"688436be76f94b96100731de\",\n  \"mensaje\": \"Me gustaria adoptar.\"\n}"
				},
				"url": {
					"raw": "http://localhost:3000/api/solicitudes/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"solicitudes",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "TC-MP-01-003 - Obtener solicitudes adoptante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Todos los ítems tienen al menos _id y estado\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"\r",
							"  pm.expect(responseData).to.be.an('array');\r",
							"\r",
							"  responseData.forEach(item => {\r",
							"    pm.expect(item).to.have.property('_id');\r",
							"    pm.expect(item).to.have.property('estado');\r",
							"  });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token_adoptante}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/solicitudes/mias",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"solicitudes",
						"mias"
					]
				}
			},
			"response": []
		},
		{
			"name": "TC-MP-01-004 - Obtener solicitudes refugio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Validate that the adoptante email is in a valid format\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
							"    responseData.forEach(item => {\r",
							"        pm.expect(item.adoptante.email).to.exist;\r",
							"        pm.expect(item.adoptante.email).to.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Email format is invalid\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token_refugio}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/solicitudes/refugio",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"solicitudes",
						"refugio"
					]
				}
			},
			"response": []
		},
		{
			"name": "TC-MP-01-005 - Actualizar solicitud (refugio)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response body is not empty\", function () {\r",
							"  const responseBody = pm.response.text();\r",
							"  pm.expect(responseBody).to.not.be.empty;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token_refugio}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"estado\": \"aprobada\"\n}"
				},
				"url": {
					"raw": "http://localhost:3000/api/solicitudes/688432c076f94b96100731c3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"solicitudes",
						"688432c076f94b96100731c3"
					]
				}
			},
			"response": []
		}
	]
}